from Crypto.Util.number import long_to_bytes, inverse

# Given values
e = 65537
c = 4894338948230470402928707660063586665636133877586628109286241259878275641109260494250817384130584823023329214861979751690561963081617330374455480937234003034778422057395258010775097230080392424358571869844921255624947595968885461336534123911023572529241708327941415913437014197548383286789776095955388635342283203973058210421769275756231192136995375798956898692310541958709215238144712661194018824033701744341479923354157538062092566495209486033904676472485258630642100327543009349262295112047920247519664433630167562500666323341592847174220829798027284008552903119224441839814665400078900184486541916998240568904705

p = 119896822061940360749715038313638728396315739830424816299049920580631811834786510090338969591192193656726160703587106254660709424514906338391194699346098893673481500553336278247656630366523577659452296505059619635145108635945650048745018777443603842093287923389142137764047076410081148899374867168880940466569
q = 100061091073204407042373419423110161024500806639151784318343888121540822290159968991219618535454735441866530705394033259234803104733186630678226529250747023317740648210947323631298285719432523270895161774732188573317283401604164519420953069225838572651728030510780041704548725469998681841772045593502443375483

# Step 1: Calculate n (if you want to verify)
n = p * q

# Step 2: Calculate phi(n)
phi_n = (p - 1) * (q - 1)

# Step 3: Calculate d (modular inverse of e mod phi(n))
d = inverse(e, phi_n)

# Step 4: Decrypt the ciphertext
m = pow(c, d, n)

# Step 5: Convert the decrypted message back to bytes
decrypted_flag = long_to_bytes(m)

# Print the decrypted message
print("Decrypted flag:", decrypted_flag.decode())
